plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'jacoco'
}
apply from: '../shared_dependencies.gradle'


android {
    namespace 'com.fashionism.capstonesepakbola'
    compileSdk 33

    defaultConfig {
        applicationId "com.fashionism.capstonesepakbola"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.all {
            jacoco {
                // Enable Jacoco for unit tests
                includeNoLocationClasses = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    lintOptions {
        disable 'IncludeLayoutParam', 'Orientation', 'UseAppTint'
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
    dynamicFeatures = [':profile', ':favorite']
}

tasks.withType(Test) {
    jacoco {
        // Enable Jacoco for instrumented tests
        includeNoLocationClasses = true
    }
}

// Add Jacoco test report task
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled true
        html.enabled true
    }

    // Set the source and class directories based on your project structure
    def sourceDirs = [
            'src/main/java',
            'src/debug/java',
            'src/test/java',
            'src/androidTest/java'
    ]

    def classDirs = [
            'build/intermediates/javac/debug/classes',
            'build/intermediates/javac/debugUnitTest/classes',
            'build/intermediates/javac/test/debug/classes',
            'build/intermediates/javac/androidTest/debug/classes'
    ]

    sourceDirectories.setFrom(files(sourceDirs))
    classDirectories.setFrom(files(classDirs))
    executionData.setFrom(files('build/outputs/code_coverage/debugAndroidTest/connected/*.ec'))
}

dependencies {

    implementation project(":core")
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //navigation
    //noinspection GradleDependency - not upgrade it because the plugin is not compatible with java 11
    api 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    //noinspection GradleDependency - not upgrade it because the plugin is not compatible with java 11
    api 'androidx.navigation:navigation-ui-ktx:2.5.2'
    //noinspection GradleDependency - not upgrade it because the plugin is not compatible with java 11
    api 'androidx.navigation:navigation-dynamic-features-fragment:2.5.2'
}